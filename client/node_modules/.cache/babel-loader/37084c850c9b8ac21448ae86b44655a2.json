{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Johns\\\\Desktop\\\\Coding Bootcamp\\\\Projects\\\\22 Week\\\\shop-shop\\\\client\\\\src\\\\components\\\\Cart\\\\index.js\";\nimport React, { useEffect } from \"react\";\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport './style.css';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { loadStripe } from '@stripe/stripe-js';\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\nimport { useLazyQuery } from '@apollo/client';\n\nconst Cart = () => {\n  const [getCheckout, {\n    data\n  }] = useLazyQuery(QUERY_CHECKOUT);\n  const [state, dispatch] = useStoreContext();\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({\n        type: ADD_MULTIPLE_TO_CART,\n        products: [...cart]\n      });\n    }\n\n    ;\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({\n      type: TOGGLE_CART\n    });\n  }\n\n  if (!state.cartOpen) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cart-closed\",\n      onClick: toggleCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, \"\\uD83D\\uDED2\"));\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach(item => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    getCheckout({\n      variables: {\n        products: productIds\n      }\n    });\n    const productIds = [];\n    state.cart.forEach(item => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close\",\n    onClick: toggleCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"[close]\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Shopping Cart\"), state.cart.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, state.cart.map(item => /*#__PURE__*/React.createElement(CartItem, {\n    key: item._id,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-row space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, \"Total: $\", calculateTotal()), Auth.loggedIn() ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submitCheckout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, \"Checkout\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 33\n    }\n  }, \"(log in to check out)\"))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"shocked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"\\uD83D\\uDE31\"), \"You haven't added anything to your cart yet!\"));\n};\n\nexport default Cart;","map":{"version":3,"sources":["C:/Users/Johns/Desktop/Coding Bootcamp/Projects/22 Week/shop-shop/client/src/components/Cart/index.js"],"names":["React","useEffect","CartItem","Auth","useStoreContext","TOGGLE_CART","ADD_MULTIPLE_TO_CART","idbPromise","QUERY_CHECKOUT","loadStripe","stripePromise","useLazyQuery","Cart","getCheckout","data","state","dispatch","getCart","cart","type","products","length","toggleCart","cartOpen","calculateTotal","sum","forEach","item","price","purchaseQuantity","toFixed","submitCheckout","variables","productIds","i","push","_id","map","loggedIn"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport './style.css';\n\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { loadStripe } from '@stripe/stripe-js';\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nimport { useLazyQuery } from '@apollo/client';\n\nconst Cart = () => {\n\n    const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n    const [state, dispatch] = useStoreContext();\n\n    useEffect(() => {\n        async function getCart() {\n            const cart = await idbPromise('cart', 'get');\n            dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n        };\n\n        if (!state.cart.length) {\n            getCart();\n        }\n    }, [state.cart.length, dispatch]);\n\n    function toggleCart() {\n        dispatch({ type: TOGGLE_CART });\n    }\n\n    if (!state.cartOpen) {\n        return (\n            <div className=\"cart-closed\" onClick={toggleCart}>\n                <span\n                    role=\"img\"\n                    aria-label=\"trash\">ðŸ›’</span>\n            </div>\n        );\n    }\n\n    function calculateTotal() {\n        let sum = 0;\n        state.cart.forEach(item => {\n            sum += item.price * item.purchaseQuantity;\n        });\n        return sum.toFixed(2);\n    }\n\n    function submitCheckout() {\n\n        getCheckout({\n            variables: { products: productIds }\n          });\n\n        const productIds = [];\n\n        state.cart.forEach((item) => {\n            for (let i = 0; i < item.purchaseQuantity; i++) {\n                productIds.push(item._id);\n            }\n        });\n    }\n\n    return (\n        <div className=\"cart\">\n            <div className=\"close\" onClick={toggleCart}>[close]</div>\n            <h2>Shopping Cart</h2>\n            {state.cart.length ? (\n                <div>\n                    {state.cart.map(item => (\n                        <CartItem key={item._id} item={item} />\n                    ))}\n                    <div className=\"flex-row space-between\">\n                        <strong>Total: ${calculateTotal()}</strong>\n                        {\n                            Auth.loggedIn() ?\n                                <button onClick={submitCheckout}>\n                                    Checkout\n                                </button>\n                                :\n                                <span>(log in to check out)</span>\n                        }\n                    </div>\n                </div>\n            ) : (\n                <h3>\n                    <span role=\"img\" aria-label=\"shocked\">\n                        ðŸ˜±\n                    </span>\n                    You haven't added anything to your cart yet!\n                </h3>\n            )}\n        </div>);\n};\n\nexport default Cart;"]},"metadata":{},"sourceType":"module"}