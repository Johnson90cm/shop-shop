{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Johns\\\\Desktop\\\\Coding Bootcamp\\\\Projects\\\\22 Week\\\\shop-shop\\\\client\\\\src\\\\components\\\\CartItem\\\\index.js\";\nimport React from 'react';\nimport { idbPromise } from \"../../utils/helpers\";\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\n\nconst CartItem = _ref => {\n  let {\n    item\n  } = _ref;\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item\n    });\n  };\n\n  const onChange = e => {\n    const value = e.target.value;\n\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item\n      });\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item,\n        purchaseQuantity: parseInt(value)\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `/images/${item.image}`,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, item.name, \", $\", item.price), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Qty:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"1\",\n    value: item.purchaseQuantity,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"trash\",\n    onClick: () => removeFromCart(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"\\uD83D\\uDDD1\\uFE0F\"))));\n};\n\nexport default CartItem;","map":{"version":3,"sources":["C:/Users/Johns/Desktop/Coding Bootcamp/Projects/22 Week/shop-shop/client/src/components/CartItem/index.js"],"names":["React","idbPromise","useStoreContext","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","CartItem","item","dispatch","removeFromCart","type","_id","onChange","e","value","target","purchaseQuantity","parseInt","image","name","price"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,gBAAT,EAA2BC,oBAA3B,QAAuD,qBAAvD;;AAEA,MAAMC,QAAQ,GAAG,QAAc;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAE3B,QAAM,GAAGC,QAAH,IAAeL,eAAe,EAApC;;AAEA,QAAMM,cAAc,GAAGF,IAAI,IAAI;AAC3BC,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEN,gBADD;AAELO,MAAAA,GAAG,EAAEJ,IAAI,CAACI;AAFL,KAAD,CAAR;AAIAT,IAAAA,UAAU,CAAC,MAAD,EAAS,QAAT,EAAmB,EAAE,GAAGK;AAAL,KAAnB,CAAV;AACH,GAND;;AAQA,QAAMK,QAAQ,GAAIC,CAAD,IAAO;AACpB,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;;AAEA,QAAIA,KAAK,KAAK,GAAd,EAAmB;AACfN,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEN,gBADC;AAEPO,QAAAA,GAAG,EAAEJ,IAAI,CAACI;AAFH,OAAD,CAAR;AAKAT,MAAAA,UAAU,CAAC,MAAD,EAAS,QAAT,EAAmB,EAAE,GAAGK;AAAL,OAAnB,CAAV;AACD,KAPH,MAOS;AACLC,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEL,oBADC;AAEPM,QAAAA,GAAG,EAAEJ,IAAI,CAACI,GAFH;AAGPK,QAAAA,gBAAgB,EAAEC,QAAQ,CAACH,KAAD;AAHnB,OAAD,CAAR;AAMAZ,MAAAA,UAAU,CAAC,MAAD,EAAS,KAAT,EAAgB,EAAE,GAAGK,IAAL;AAAWS,QAAAA,gBAAgB,EAAEC,QAAQ,CAACH,KAAD;AAArC,OAAhB,CAAV;AACD;AACE,GAnBT;;AAqBA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,GAAG,EAAG,WAAUP,IAAI,CAACW,KAAM,EAD/B;AAEI,IAAA,GAAG,EAAC,EAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMX,IAAI,CAACY,IAAX,SAAoBZ,IAAI,CAACa,KAAzB,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,WAAW,EAAC,GAFhB;AAGI,IAAA,KAAK,EAAEb,IAAI,CAACS,gBAHhB;AAII,IAAA,QAAQ,EAAEJ,QAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAQI;AACI,IAAA,IAAI,EAAC,KADT;AAEI,kBAAW,OAFf;AAGI,IAAA,OAAO,EAAE,MAAMH,cAAc,CAACF,IAAD,CAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARJ,CAFJ,CAPJ,CADJ;AA6BH,CA9DD;;AAgEA,eAAeD,QAAf","sourcesContent":["import React from 'react';\n\nimport { idbPromise } from \"../../utils/helpers\";\n\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\n\nconst CartItem = ({ item }) => {\n\n    const [, dispatch] = useStoreContext();\n\n    const removeFromCart = item => {\n        dispatch({\n            type: REMOVE_FROM_CART,\n            _id: item._id\n        });\n        idbPromise('cart', 'delete', { ...item });\n    };\n\n    const onChange = (e) => {\n        const value = e.target.value;\n\n        if (value === '0') {\n            dispatch({\n              type: REMOVE_FROM_CART,\n              _id: item._id\n            });\n          \n            idbPromise('cart', 'delete', { ...item });\n          } else {\n            dispatch({\n              type: UPDATE_CART_QUANTITY,\n              _id: item._id,\n              purchaseQuantity: parseInt(value)\n            });\n          \n            idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n          }\n            };\n\n    return (\n        <div className=\"flex-row\">\n            <div>\n                <img\n                    src={`/images/${item.image}`}\n                    alt=\"\"\n                />\n            </div>\n            <div>\n                <div>{item.name}, ${item.price}</div>\n                <div>\n                    <span>Qty:</span>\n                    <input\n                        type=\"number\"\n                        placeholder=\"1\"\n                        value={item.purchaseQuantity}\n                        onChange={onChange}\n                    />\n                    <span\n                        role=\"img\"\n                        aria-label=\"trash\"\n                        onClick={() => removeFromCart(item)}\n                    >\n                        üóëÔ∏è\n                    </span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CartItem;"]},"metadata":{},"sourceType":"module"}